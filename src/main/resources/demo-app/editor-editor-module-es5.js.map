{"version":3,"sources":["webpack:///src/app/editor/editor.module.ts","webpack:///src/app/editor/editable-article-resolver.service.ts","webpack:///src/app/editor/editor-routing.module.ts","webpack:///src/app/editor/editor.component.ts","webpack:///src/app/editor/editor.component.html"],"names":["EditorModule","EditableArticleResolver","articlesService","router","userService","route","state","get","params","pipe","article","getCurrentUser","username","author","navigateByUrl","err","routes","path","component","canActivate","resolve","EditorRoutingModule","forChild","EditorComponent","fb","tagField","errors","isSubmitting","articleForm","group","title","description","body","tagList","data","subscribe","patchValue","tag","value","indexOf","push","reset","tagName","filter","updateArticle","save","slug","values","Object","assign","addTag","submitForm"],"mappings":"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","file":"editor-editor-module-es5.js","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { EditorComponent } from './editor.component';\r\nimport { EditableArticleResolver } from './editable-article-resolver.service';\r\nimport { AuthGuard } from '../core';\r\nimport { SharedModule } from '../shared';\r\nimport { EditorRoutingModule } from './editor-routing.module';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, EditorRoutingModule],\r\n  declarations: [EditorComponent],\r\n  providers: [EditableArticleResolver]\r\n})\r\nexport class EditorModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Article, ArticlesService, UserService } from '../core';\r\nimport { catchError ,  map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class EditableArticleResolver implements Resolve<Article> {\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n\r\n    return this.articlesService.get(route.params['slug'])\r\n      .pipe(\r\n        map(\r\n          article => {\r\n            if (this.userService.getCurrentUser().username === article.author.username) {\r\n              return article;\r\n            } else {\r\n              this.router.navigateByUrl('/');\r\n            }\r\n          }\r\n        ),\r\n        catchError((err) => this.router.navigateByUrl('/'))\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditorComponent } from './editor.component';\r\nimport { EditableArticleResolver } from './editable-article-resolver.service';\r\nimport { AuthGuard } from '../core';\r\nimport { SharedModule } from '../shared';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: ':slug',\r\n    component: EditorComponent,\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      article: EditableArticleResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EditorRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Article, ArticlesService } from '../core';\r\n\r\n@Component({\r\n  selector: 'app-editor-page',\r\n  templateUrl: './editor.component.html'\r\n})\r\nexport class EditorComponent implements OnInit {\r\n  article: Article = {} as Article;\r\n  articleForm: FormGroup;\r\n  tagField = new FormControl();\r\n  errors: Object = {};\r\n  isSubmitting = false;\r\n\r\n  constructor(\r\n    private articlesService: ArticlesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // use the FormBuilder to create a form group\r\n    this.articleForm = this.fb.group({\r\n      title: '',\r\n      description: '',\r\n      body: ''\r\n    });\r\n\r\n    // Initialized tagList as empty array\r\n    this.article.tagList = [];\r\n\r\n    // Optional: subscribe to value changes on the form\r\n    // this.articleForm.valueChanges.subscribe(value => this.updateArticle(value));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // If there's an article prefetched, load it\r\n    this.route.data.subscribe((data: { article: Article }) => {\r\n      if (data.article) {\r\n        this.article = data.article;\r\n        this.articleForm.patchValue(data.article);\r\n      }\r\n    });\r\n  }\r\n\r\n  addTag() {\r\n    // retrieve tag control\r\n    const tag = this.tagField.value;\r\n    // only add tag if it does not exist yet\r\n    if (this.article.tagList.indexOf(tag) < 0) {\r\n      this.article.tagList.push(tag);\r\n    }\r\n    // clear the input\r\n    this.tagField.reset('');\r\n  }\r\n\r\n  removeTag(tagName: string) {\r\n    this.article.tagList = this.article.tagList.filter(tag => tag !== tagName);\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitting = true;\r\n\r\n    // update the model\r\n    this.updateArticle(this.articleForm.value);\r\n\r\n    // post the changes\r\n    this.articlesService.save(this.article).subscribe(\r\n      article => this.router.navigateByUrl('/article/' + article.slug),\r\n      err => {\r\n        this.errors = err;\r\n        this.isSubmitting = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  updateArticle(values: Object) {\r\n    Object.assign(this.article, values);\r\n  }\r\n}\r\n","<div class=\"editor-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n\r\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n\r\n        <form [formGroup]=\"articleForm\">\r\n          <fieldset [disabled]=\"isSubmitting\">\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control form-control-lg\"\r\n                formControlName=\"title\"\r\n                type=\"text\"\r\n                placeholder=\"Article Title\" />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control\"\r\n                formControlName=\"description\"\r\n                type=\"text\"\r\n                placeholder=\"What's this article about?\" />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <textarea class=\"form-control\"\r\n                formControlName=\"body\"\r\n                rows=\"8\"\r\n                placeholder=\"Write your article (in markdown)\">\r\n              </textarea>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input class=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Enter tags\"\r\n                [formControl]=\"tagField\"\r\n                (keyup.enter)=\"addTag()\" />\r\n\r\n              <div class=\"tag-list\">\r\n                <span *ngFor=\"let tag of article.tagList\"\r\n                  class=\"tag-default tag-pill\">\r\n                  <i class=\"ion-close-round\" (click)=\"removeTag(tag)\"></i>\r\n                  {{ tag }}\r\n                </span>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <button class=\"btn btn-lg pull-xs-right btn-primary\" type=\"button\" (click)=\"submitForm()\">\r\n              Publish Article\r\n            </button>\r\n\r\n          </fieldset>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}